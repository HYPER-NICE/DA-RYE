<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hyper.darye.dao.OutboundDao">
  <resultMap id="BaseResultMap" type="hyper.darye.model.Outbound">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="inbound_id" jdbcType="BIGINT" property="inboundId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="outbound_date" jdbcType="TIMESTAMP" property="outboundDate" />
    <result column="reason_id" jdbcType="BIGINT" property="reasonId" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="last_modified_date" jdbcType="TIMESTAMP" property="lastModifiedDate" />
    <result column="deleted_date" jdbcType="TIMESTAMP" property="deletedDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, inbound_id, quantity, outbound_date, reason_id, created_date, last_modified_date, 
    deleted_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from outbound
    where id = #{id,jdbcType=BIGINT}
    and deleted_date is null
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
    update outbound
    set deleted_date = now()
    where id = #{id,jdbcType=BIGINT}
    and deleted_date is null
  </update>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="hyper.darye.model.Outbound" useGeneratedKeys="true">
    insert into outbound (inbound_id, quantity, outbound_date, reason_id)
    values (#{inboundId,jdbcType=BIGINT}, #{quantity,jdbcType=INTEGER}, #{outboundDate,jdbcType=TIMESTAMP}, 
      #{reasonId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="hyper.darye.model.Outbound" useGeneratedKeys="true">
    insert into outbound
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="inboundId != null">
        inbound_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="outboundDate != null">
        outbound_date,
      </if>
      <if test="reasonId != null">
        reason_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="inboundId != null">
        #{inboundId,jdbcType=BIGINT},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="outboundDate != null">
        #{outboundDate,jdbcType=TIMESTAMP},
      </if>
      <if test="reasonId != null">
        #{reasonId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hyper.darye.model.Outbound">
    update outbound
    <set>
      <if test="inboundId != null">
        inbound_id = #{inboundId,jdbcType=BIGINT},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="outboundDate != null">
        outbound_date = #{outboundDate,jdbcType=TIMESTAMP},
      </if>
      <if test="reasonId != null">
        reason_id = #{reasonId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
    and deleted_date is null
  </update>
  <update id="updateByPrimaryKey" parameterType="hyper.darye.model.Outbound">
    update outbound
    set inbound_id = #{inboundId,jdbcType=BIGINT},
      quantity = #{quantity,jdbcType=INTEGER},
      outbound_date = #{outboundDate,jdbcType=TIMESTAMP},
      reason_id = #{reasonId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
    and deleted_date is null
  </update>
</mapper>