<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hyper.darye.dao.CategoryDao">

    <!-- 모든 카테고리 조회 -->
    <select id="selectAll" resultType="hyper.darye.dto.Category.CategoryDto">
        SELECT * FROM category
    </select>

    <!-- ID로 특정 카테고리 조회 -->
    <select id="selectCategoryById" parameterType="long" resultType="hyper.darye.dto.Category.CategoryDto">
        SELECT * FROM category WHERE id = #{id}
    </select>

    <!-- 이름으로 특정 카테고리 조회 -->
    <select id="selectCategoryByName" parameterType="string" resultType="hyper.darye.dto.Category.CategoryDto">
        SELECT * FROM category WHERE name = #{name}
    </select>

    <!-- 특정 카테고리의 직계 하위 카테고리 조회 -->
    <select id="selectDirectSubCategoriesById" parameterType="long" resultType="hyper.darye.dto.Category.CategoryDto">
        SELECT * FROM category WHERE parent_id = #{parentId}
    </select>

    <!-- 특정 카테고리를 부모로 가지는 전체 하위 카테고리 조회 -->
    <select id="selectAllSubCategories" parameterType="long" resultType="hyper.darye.dto.Category.CategoryDto">
        WITH RECURSIVE subcategories AS (
            SELECT * FROM category WHERE id = #{parentId}
            UNION ALL
            SELECT c.* FROM category c
            INNER JOIN subcategories sc ON c.parent_id = sc.id
        )
        SELECT * FROM subcategories WHERE id != #{parentId};
    </select>

    <!-- 이름을 기준으로 특정 카테고리를 부모로 가지는 직계 하위 카테고리 조회 -->
    <select id="selectDirectSubCategoriesByName" parameterType="string" resultType="hyper.darye.dto.Category.CategoryDto">
        SELECT c.id, c.name, c.parent_id AS parentId
        FROM category c
                 INNER JOIN category p ON c.parent_id = p.id
        WHERE p.name = #{parentName}
    </select>

    <!-- 이름을 기준으로 특정 카테고리를 부모로 가지는 전체 하위 카테고리 조회 -->
    <select id="selectAllSubCategoriesByName" parameterType="string" resultType="hyper.darye.dto.Category.CategoryDto">
        WITH RECURSIVE subcategories AS (
            SELECT c.id, c.name, c.parent_id AS parentId
            FROM category c
                     INNER JOIN category p ON c.parent_id = p.id
            WHERE p.name = #{parentName}
            UNION ALL
            SELECT child.id, child.name, child.parent_id AS parentId
            FROM category child
                     INNER JOIN subcategories parent ON child.parent_id = parent.id
        )
        SELECT * FROM subcategories;
    </select>

    <!-- 카테고리 추가 -->
    <insert id="insertCategory" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO category (name, parent_id)
        VALUES (#{name}, #{parentId})
    </insert>

    <!-- 카테고리 삭제 -->
    <delete id="deleteCategory">
        DELETE FROM category WHERE id = #{id}
    </delete>

    <!-- 카테고리 업데이트 -->
    <update id="updateCategory">
        UPDATE category
        <set>
            <if test="categoryDto.name != null">
                name = #{categoryDto.name},
            </if>
            <if test="categoryDto.parentId != null">
                parent_id = #{categoryDto.parentId},
            </if>
        </set>
        WHERE id = #{categoryDto.id}
    </update>



</mapper>
